{"version":3,"sources":["components/AddCategory.jsx","helpers/getGifs.js","hooks/useFetchGifs.js","components/GifGridItem.jsx","components/GifGrid.jsx","GifExpertApp.jsx","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","event","preventDefault","trim","length","prevState","type","value","onChange","text","target","getGifs","category","a","url","encodeURI","fetch","response","json","data","gifs","map","img","id","title","images","downsized_medium","useFetchGifs","loading","state","setState","useEffect","then","GifGridItem","className","src","alt","GifGrid","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qMA8BeA,EA3BK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACNC,mBAAS,IADH,mBACnCC,EADmC,KACvBC,EADuB,KAgB1C,OACC,0BAAMC,SATc,SAACC,GACrBA,EAAMC,iBACFJ,EAAWK,OAAOC,OAAS,IAC9BR,GAAc,SAACS,GAAD,OAAgBP,GAAhB,mBAA+BO,OAC7CN,EAAc,OAMd,2BAAOO,KAAK,OAAOC,MAAOT,EAAYU,SAfnB,SAACP,GACrB,IAAMQ,EAAOR,EAAMS,OAAOH,MAC1BR,EAAcU,Q,uBCUDE,EAlBF,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACRC,EADQ,iDACwCC,UACpDH,GAFY,+DAISI,MAAMF,GAJf,cAIRG,EAJQ,gBAKSA,EAASC,OALlB,uBAKNC,EALM,EAKNA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC7B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAXxB,kBAePM,GAfO,4CAAH,sDCsBEO,EAnBM,SAACf,GAAc,IAAD,EACPf,mBAAS,CACjCsB,KAAM,GACNS,SAAS,IAHsB,mBAC1BC,EAD0B,KACnBC,EADmB,KAgBjC,OAVAC,qBAAU,WACRpB,EAAQC,GACLoB,MAAK,SAAAP,GACJK,EAAS,CACPX,KAAMM,EACNG,SAAS,SAGd,CAAChB,IAEGiB,GCRMI,EATK,SAAC,GAAoB,IAAlBT,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAC7B,OACC,yBAAKoB,UAAU,4CACd,yBAAKC,IAAKrB,EAAKsB,IAAKZ,IACpB,2BAAIA,KCgBQa,EAlBC,SAAC,GAAkB,IAAhBzB,EAAe,EAAfA,SAAe,EACCe,EAAaf,GAAjCa,EADmB,EACzBN,KAAcS,EADW,EACXA,QAEtB,OACC,oCACC,wBAAIM,UAAU,uCAAuCtB,GAEpDgB,GAAW,yCAEZ,yBAAKM,UAAU,aACbT,EAAOJ,KAAI,SAACC,GAAD,OACX,kBAAC,EAAD,eAAagB,IAAKhB,EAAIC,IAAQD,UCMpBiB,EAjBM,WAAO,IAAD,EACU1C,mBAAS,CAAC,cADpB,mBACnB2C,EADmB,KACP5C,EADO,KAG1B,OACC,oCACC,4CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BACA,4BACE4C,EAAWnB,KAAI,SAACT,GAAD,OACf,kBAAC,EAAD,CAAS0B,IAAK1B,EAAUA,SAAUA,U,YCPvC6B,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.33ae6b83.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ({ setCategories }) => {\r\n\tconst [inputValue, setInputValue] = useState('');\r\n\r\n\tconst handleChange = (event) => {\r\n\t\tconst text = event.target.value;\r\n\t\tsetInputValue(text);\r\n\t};\r\n\r\n\tconst handleSubmit = (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tif (inputValue.trim().length > 2) {\r\n\t\t\tsetCategories((prevState) => [inputValue, ...prevState]); // Cuando se pasa como callback regresa el estado anterior\r\n\t\t\tsetInputValue('');\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t<input type='text' value={inputValue} onChange={handleChange} />\r\n\t\t</form>\r\n\t);\r\n};\r\n\r\nAddCategory.propTypes = {\r\n\tsetCategories: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default AddCategory;\r\n","const getGifs = async (category) => {\r\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(\r\n    category\r\n  )}&limit=10&api_key=2jMc3deZLMtfg3u10rjrgQwK2BSgFnBS`;\r\n  const response = await fetch(url);\r\n  const { data } = await response.json();\r\n\r\n  const gifs = data.map((img) => {\r\n    return {\r\n      id: img.id,\r\n      title: img.title,\r\n      url: img.images?.downsized_medium.url,\r\n    };\r\n  });\r\n\r\n  return gifs;\r\n};\r\n\r\nexport default getGifs;","import { useState, useEffect } from 'react';\r\nimport getGifs from '../helpers/getGifs';\r\n\r\nconst useFetchGifs = (category) => {\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true\r\n  });\r\n\r\n  useEffect(() => {\r\n    getGifs(category)\r\n      .then(images => {\r\n        setState({\r\n          data: images,\r\n          loading: false\r\n        });\r\n      });\r\n  }, [category]);\r\n\r\n  return state;\r\n}\r\n\r\nexport default useFetchGifs;\r\n","import React from 'react';\r\n\r\nconst GifGridItem = ({ title, url }) => {\r\n\treturn (\r\n\t\t<div className='card animate__animated animate__bounceIn'>\r\n\t\t\t<img src={url} alt={title} />\r\n\t\t\t<p>{title}</p>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default GifGridItem;\r\n","import React from 'react';\r\nimport useFetchGifs from '../hooks/useFetchGifs';\r\nimport GifGridItem from './GifGridItem';\r\n\r\nconst GifGrid = ({ category }) => {\r\n\tconst { data: images, loading } = useFetchGifs(category);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h3 className='animate__animated animate__bounceIn'>{category}</h3>\r\n\r\n\t\t\t{loading && <p>Loading...</p>}\r\n\r\n\t\t\t<div className='card-grid'>\r\n\t\t\t\t{images.map((img) => (\r\n\t\t\t\t\t<GifGridItem key={img.id} {...img} />\r\n\t\t\t\t))}\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default GifGrid;\r\n","import React, { useState } from 'react';\r\nimport AddCategory from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\tconst [categories, setCategories] = useState(['One Punch']);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h2>GifExpertApp</h2>\r\n\t\t\t<AddCategory setCategories={setCategories} />\r\n\t\t\t<hr />\r\n\t\t\t<ol>\r\n\t\t\t\t{categories.map((category) => (\r\n\t\t\t\t\t<GifGrid key={category} category={category} />\r\n\t\t\t\t))}\r\n\t\t\t</ol>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default GifExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport GifExpertApp from './GifExpertApp'\nimport './index.css';\nimport 'animate.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}